/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package database_project2;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author SARK
 */
public class Package extends javax.swing.JInternalFrame {

    /** Creates new form PackageInfo */
    public Package() {
        initComponents();
        PackageInfo  temp  =new PackageInfo();
        temp  = new ConnectMSSQL().getPackageInfo("");
        ac.setText(Integer.toString(temp.getAc()));
        nonAc.setText(Integer.toString(temp.getNonAc()));
        b.setText(Integer.toString(temp.getB()));
        l.setText(Integer.toString(temp.getL()));
        d.setText(Integer.toString(temp.getD()));
        bL.setText(Integer.toString(temp.getBl()));
        bD.setText(Integer.toString(temp.getBd()));
        lD.setText(Integer.toString(temp.getLd()));
        bLD.setText(Integer.toString(temp.getBld()));
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ac = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        nonAc = new javax.swing.JTextField();
        b = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        l = new javax.swing.JTextField();
        d = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        bL = new javax.swing.JTextField();
        bD = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lD = new javax.swing.JTextField();
        bLD = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(750, 570));
        setMinimumSize(new java.awt.Dimension(750, 570));
        setPreferredSize(new java.awt.Dimension(750, 570));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(15, 19, 52));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Package Info (Monthly)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 734, -1));

        ac.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        ac.setPreferredSize(new java.awt.Dimension(59, 27));
        ac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                acKeyTyped(evt);
            }
        });
        getContentPane().add(ac, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 87, 145, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("AC:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 90, 91, -1));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Non-AC:");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 128, 91, -1));

        nonAc.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        nonAc.setPreferredSize(new java.awt.Dimension(59, 27));
        nonAc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nonAcKeyTyped(evt);
            }
        });
        getContentPane().add(nonAc, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 125, 145, -1));

        b.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        b.setPreferredSize(new java.awt.Dimension(59, 27));
        b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bKeyTyped(evt);
            }
        });
        getContentPane().add(b, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 163, 145, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Breakfast:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 166, 91, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Lunch:");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 204, 91, -1));

        l.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        l.setPreferredSize(new java.awt.Dimension(59, 27));
        l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lKeyTyped(evt);
            }
        });
        getContentPane().add(l, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 201, 145, -1));

        d.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        d.setPreferredSize(new java.awt.Dimension(59, 27));
        d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dKeyTyped(evt);
            }
        });
        getContentPane().add(d, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 246, 145, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Dinner:");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 249, 91, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Breakfast+Lunch:");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 287, 140, -1));

        bL.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        bL.setPreferredSize(new java.awt.Dimension(59, 27));
        bL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bLKeyTyped(evt);
            }
        });
        getContentPane().add(bL, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 284, 145, -1));

        bD.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        bD.setPreferredSize(new java.awt.Dimension(59, 27));
        bD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bDKeyTyped(evt);
            }
        });
        getContentPane().add(bD, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 322, 145, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Breafast+Dinner:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 325, 140, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Lunch+Dinner:");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 363, 140, -1));

        lD.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lD.setPreferredSize(new java.awt.Dimension(59, 27));
        lD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lDKeyTyped(evt);
            }
        });
        getContentPane().add(lD, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 360, 145, -1));

        bLD.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        bLD.setPreferredSize(new java.awt.Dimension(59, 27));
        bLD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bLDKeyTyped(evt);
            }
        });
        getContentPane().add(bLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(397, 398, 145, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Breakfast+Lunch+Dinner:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 401, 181, -1));

        saveButton.setBackground(new java.awt.Color(15, 19, 52));
        saveButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 456, 72, 33));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if(ac.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Ac is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(nonAc.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Non-Ac is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(b.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(l.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Lunch is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(d.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Dinner is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bL.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Lunch is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bD.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Dinner is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(lD.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Lunch+Dinner is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bLD.getText().length()==0)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Lunch+Dinner is Empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(ac.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Ac should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(nonAc.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Non-Ac should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(b.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(l.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Lunch should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(d.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Dinner should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bL.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Lunch should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bD.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Dinner should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(lD.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Lunch+Dinner should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else if(bLD.getText().length()>7)
        {
            JOptionPane.showMessageDialog(this, "Cost of Breakfast+Lunch+Dinner should be less than 7 digits","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            new ConnectMSSQL().update("Package","ac = "+ac.getText()+", nonac = "+nonAc.getText()+",b = "+b.getText()+", l = "+l.getText()+",d = "+d.getText()+",bl = "+bL.getText()+", bd = "+bD.getText()+",ld = "+lD.getText()+", bld = "+bLD.getText());
            JOptionPane.showMessageDialog(this, "Updated Successfully","Successful",JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void acKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_acKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_acKeyTyped

    private void nonAcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nonAcKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_nonAcKeyTyped

    private void bKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_bKeyTyped

    private void lKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_lKeyTyped

    private void dKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_dKeyTyped

    private void bLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bLKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_bLKeyTyped

    private void bDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bDKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_bDKeyTyped

    private void lDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lDKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_lDKeyTyped

    private void bLDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bLDKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_bLDKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ac;
    private javax.swing.JTextField b;
    private javax.swing.JTextField bD;
    private javax.swing.JTextField bL;
    private javax.swing.JTextField bLD;
    private javax.swing.JTextField d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField l;
    private javax.swing.JTextField lD;
    private javax.swing.JTextField nonAc;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
